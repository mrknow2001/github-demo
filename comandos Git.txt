ggit status --- status rep local
git checkout -b '$branchName' --- create new branch
git checkout '$branchName' --- move the repository to this $branchName
git pull --- update current branch with the remote
git push origin '$branchName' -u --- publish new branch in the remote
git st


Start working in a new issue

1 - checkout to develop
2 - update develop branch
3 - create new branch
4 - publish new branch

para iniciar un pryecto nuevo 
git init
cuando hago git status
me va a mostrar los archivos que git inicio
lo agrego en varias maneras.
-general: usando git add -a
-parcial: usando git add [nombre de archivo con su extencion]

git actualmente esta configurado para que use los commits en sublimtext
pero si quiero poner un mensaje cuando hago un commit.. despues de agregar
el cambio debo escribir;
 git commit -m "descripcion del mensaje no importa el tamano"

para viajar en el tiempo loo que debo hacer es darme cuenta
cual es el historial de los commit..
 con : git log
despues de esto aparecera los commit anteriores .
copio lo encriptado y digito;
git checkout [lo encriptado]...
si quiero volver al ultimo commit solo tengo que hacer git chekout master

para crar un log de los commits antes hechos en un archivo
solo tengo que crear git log > commits.txt

para volver al menu pricipal es solo digitar la q
5eb6d2e8476313b55743b5c2bb958fff0f538ca7  este es un commit viejo


para crear el remoto

-git init
- git config --local -e
- despues creo el brach le doy push git push origin Devolop -u 

gi


le pusimos el usuario y el pass
-git commit
-agregamos el remoto
-git push
-para mandarlo al remoto
	es.. git push origin -u master

-------------------------------------------------------------------------------------------------
Mientras estemos en una rama local, es decir,
 no se han subido los cambios a una remota, 
podemos deshacer un commit de las siguientes maneras: 

git reset --hard HEAD~1

En cambio, si quieres deshacer un commit, pero deseas mantener los cambios:

git reset --soft HEAD~1
Este comando eliminará el commit pero todos los cambios de él se pasarán al índice, es decir, justo antes de hacer commit y después de hacer git add.


 git merge frontend para unir al master